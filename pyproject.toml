[tool.poetry]
name = "django-routines"
version = "1.0.2"
description = "Define named groups of management commands in Django settings files for batched execution."
authors = ["Brian Kohan <bckohan@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/bckohan/django-routines"
homepage = "https://django-routines.readthedocs.io"
keywords = ["django", "CLI", "management", "routine", "routines", "batch", "commands", "deploy"]
classifiers = [
    "Environment :: Console",
    "Framework :: Django",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Development Status :: 5 - Production/Stable",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4.0",
    "Framework :: Django :: 4.1",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: Site Management",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules"
]

packages = [
    { include = "django_routines" }
]
exclude = ["tests"]

[tool.poetry.dependencies]
python = ">=3.8,<4.0"
Django = ">=3.2,<6.0"
django-typer = "^2.1.0"

# this should track typer's rich dependency, so long as our console
# patches still work - so be sure to test on the low end of the range
rich = { version = ">=10.11.0,<14.0.0", optional = true }

# we need this on 3.8 for Annotated types and 3.9 for ParamSpec
typing-extensions = { version = ">=3.7.4.3", markers = "python_version < '3.10'" }


[tool.poetry.group.dev.dependencies]
ipdb = "^0.13.13"
pytest-django = "^4.7.0"
pytest-cov = "^5.0.0"
Sphinx = [
    { version = "^7.2.0", markers = "python_version > '3.8'" },
    { version = "^7.0.0", markers = "python_version <= '3.8'" },
]
sphinx-rtd-theme = "^2.0.0"
doc8 = "^1.1.1"
aiohttp = "^3.9.1"
readme-renderer = {extras = ["md"], version = ">=42,<44"}
sphinxcontrib-typer = {extras = ["html", "pdf", "png"], version = "^0.3.0", markers="python_version >= '3.9'"}
pytest-env = "^1.0.0"
pexpect = "^4.9.0"
pyright = "^1.1.357"
ruff = "^0.4.1"
django-stubs = "^5.0.2"
mypy = "^1.10.0"

[tool.poetry.extras]
rich = ["rich"]

[tool.mypy]
# The mypy configurations: http://bit.ly/2zEl9WI
# todo some stubs errors
ignore_missing_imports = true
exclude = ["tests"]


# todo doc8 configuration here is not being picked up and doesnt seem to be working
# as expected - for now pass these parameters manually
[tool.doc8]
max-line-length = 100
sphinx = true

[tool.pytest.ini_options]
# py.test options:
DJANGO_SETTINGS_MODULE = "tests.settings"
python_files = "test_*.py"
norecursedirs = "*.egg .eggs dist build docs .tox .git __pycache__ shellcompletion"
env = [
    "TERMINAL_WIDTH=80",
]

addopts = [
  "--strict-markers",
  "--cov=django_routines",
  "--cov-branch",
  "--cov-report=term-missing:skip-covered"
]

[tool.coverage.run]
omit = ["tests/**/*.py"]
branch = true
source = ["tests"]
concurrency = ["multiprocessing"]
parallel = true
relative_files = true
command_line = "-m pytest --cov=django_routines"

[tool.coverage.paths]
source = [
    "django_routines"
]

[tool.pyright]
exclude = ["tests/**/*"]
include = [
    "django_routines"
]

[tool.ruff]
line-length = 88
exclude = [
    "doc",
    "dist",
    "examples"
]

[tool.ruff.lint]
exclude = [
    "tests/**/*"
]
